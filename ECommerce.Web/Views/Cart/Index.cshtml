@model List<CartViewModel>
@{
    ViewData["Title"] = "Sepetim";
}

<div class="container mt-4">
    <h2>Sepetim</h2>

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            Sepetiniz boş. <a asp-controller="Product" asp-action="Index">Alışverişe başlayın</a>
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>Ürün</th>
                        <th>Fiyat</th>
                        <th>Adet</th>
                        <th>Toplam</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <div class="d-flex align-items-center">
                                    @if (!string.IsNullOrEmpty(item.ImageUrl))
                                    {
                                        <img src="@($"{ViewBag.ApiUrl}{item.ImageUrl}")" 
                                             alt="@item.ProductName"
                                             style="width: 50px; height: 50px; object-fit: cover;"
                                             class="me-3">
                                    }
                                    <div>
                                        <h6 class="mb-0">@item.ProductName</h6>
                                    </div>
                                </div>
                            </td>
                            <td>@item.Price.ToString("C2")</td>
                            <td style="width: 150px;">
                                <div class="input-group">
                                    <button class="btn btn-outline-secondary update-quantity" 
                                            data-action="decrease" 
                                            data-product-id="@item.ProductId">-</button>
                                    <input type="number" 
                                           class="form-control text-center quantity-input" 
                                           value="@item.Quantity" 
                                           min="1"
                                           data-product-id="@item.ProductId">
                                    <button class="btn btn-outline-secondary update-quantity" 
                                            data-action="increase" 
                                            data-product-id="@item.ProductId">+</button>
                                </div>
                            </td>
                            <td>@((item.Price * item.Quantity).ToString("C2"))</td>
                            <td>
                                <button class="btn btn-danger btn-sm remove-item" 
                                        data-product-id="@item.ProductId">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="3" class="text-end"><strong>Toplam:</strong></td>
                        <td>@Model.Sum(x => x.Price * x.Quantity).ToString("C2")</td>
                        <td></td>
                    </tr>
                </tfoot>
            </table>
        </div>

        <div class="d-flex justify-content-between align-items-center mt-3">
            <a href="/" class="btn btn-secondary">Alışverişe Devam Et</a>
            <a href="/Checkout" class="btn btn-primary">Siparişi Tamamla</a>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Miktar güncelleme
            $('.update-quantity').click(function() {
                var productId = $(this).data('product-id');
                var input = $(`.quantity-input[data-product-id="${productId}"]`);
                var currentValue = parseInt(input.val());
                var action = $(this).data('action');
                
                if (action === 'increase') {
                    input.val(currentValue + 1);
                } else if (action === 'decrease' && currentValue > 1) {
                    input.val(currentValue - 1);
                }
                
                updateCartItem(productId, input.val());
            });

            // Ürünü sepetten kaldırma
            $('.remove-item').click(function(e) {
                e.preventDefault();
                var productId = $(this).data('product-id');
                var token = getCookie('token');
                
                if (!token) {
                    window.location.href = '/Account/Login';
                    return;
                }

                if (confirm('Bu ürünü sepetten kaldırmak istediğinize emin misiniz?')) {
                    $.ajax({
                        url: '/Cart/RemoveItem',
                        type: 'POST',
                        data: { productId: productId },
                        success: function(response) {
                            location.reload();
                        },
                        error: function(xhr) {
                            console.log('Error:', xhr);
                            alert('Ürün kaldırılırken bir hata oluştu: ' + 
                                  (xhr.responseJSON?.message || 'Bilinmeyen hata'));
                        }
                    });
                }
            });

            function getCookie(name) {
                var value = "; " + document.cookie;
                var parts = value.split("; " + name + "=");
                if (parts.length === 2) return parts.pop().split(";").shift();
            }

            function updateCartItem(productId, quantity) {
                $.post('/Cart/UpdateQuantity', { productId: productId, quantity: quantity })
                    .done(function() {
                        location.reload();
                    })
                    .fail(function() {
                        alert('Miktar güncellenirken bir hata oluştu.');
                    });
            }
        });
    </script>
} 