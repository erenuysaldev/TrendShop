@model List<ECommerce.Web.Models.ViewModels.ProductViewModel>
@{
    ViewData["Title"] = "Ürünler";
}

<div class="container-fluid py-5 bg-light">
    <div class="container">
        <h1 class="text-center mb-4">Ürün Kataloğu</h1>
        <p class="text-center text-muted mb-5">Kaliteli ürünlerin adresi TrendShop'ta tüm ihtiyaçlarınız için uygun fiyatlı ürünleri keşfedin.</p>
    </div>
</div>

<div class="container my-5">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }

    <div class="row">
        <!-- Sidebar / Filtreler -->
        <div class="col-lg-3 mb-4">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title mb-3">Filtreler</h5>
                    
                    <!-- Kategoriler -->
                    <div class="mb-4">
                        <h6 class="fw-bold">Kategoriler</h6>
                        <div class="form-check">
                            <input class="form-check-input category-filter" type="checkbox" value="all" id="category-all" checked>
                            <label class="form-check-label" for="category-all">Tümü</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input category-filter" type="checkbox" value="1" id="category-1">
                            <label class="form-check-label" for="category-1">Ayakkabı</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input category-filter" type="checkbox" value="2" id="category-2">
                            <label class="form-check-label" for="category-2">Bilgisayar</label>
                        </div>
                    </div>
                    
                    <!-- Fiyat Aralığı -->
                    <div class="mb-4">
                        <h6 class="fw-bold">Fiyat Aralığı</h6>
                        <div class="d-flex align-items-center">
                            <input type="number" class="form-control form-control-sm me-2" id="price-min" placeholder="Min" min="0">
                            <span class="text-muted">-</span>
                            <input type="number" class="form-control form-control-sm ms-2" id="price-max" placeholder="Max" min="0">
                        </div>
                        <button class="btn btn-sm btn-outline-primary mt-2" id="apply-price-filter">Uygula</button>
                    </div>
                    
                    <!-- Stok Durumu -->
                    <div class="mb-4">
                        <h6 class="fw-bold">Stok Durumu</h6>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="in-stock" checked>
                            <label class="form-check-label" for="in-stock">Stokta Var</label>
                        </div>
                    </div>
                    
                    <!-- Sıralama -->
                    <div>
                        <h6 class="fw-bold">Sıralama</h6>
                        <select class="form-select form-select-sm" id="sort-products">
                            <option value="default" selected>Varsayılan</option>
                            <option value="price-asc">Fiyat (Düşükten Yükseğe)</option>
                            <option value="price-desc">Fiyat (Yüksekten Düşüğe)</option>
                            <option value="name-asc">İsim (A-Z)</option>
                            <option value="name-desc">İsim (Z-A)</option>
                        </select>
                    </div>
                </div>
            </div>
            
            <!-- Reklam Banner -->
            <div class="card border-0 shadow-sm mt-4 p-3 bg-primary text-white">
                <div class="card-body text-center">
                    <h5 class="card-title">Büyük İndirim!</h5>
                    <p class="card-text">Seçili ürünlerde %50'ye varan indirimler!</p>
                    <a href="#" class="btn btn-light btn-sm">Detayları Gör</a>
                </div>
            </div>
        </div>
        
        <!-- Ürün Listesi -->
        <div class="col-lg-9">
            <!-- Arama ve görünüm kontrolü -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div class="d-flex align-items-center">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Ürün ara..." id="search-products">
                        <button class="btn btn-outline-secondary" type="button">
                            <i class="bi bi-search"></i>
                        </button>
                    </div>
                </div>
                <div class="d-flex align-items-center">
                    <span class="me-2 text-muted small">Görünüm:</span>
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-outline-secondary active" id="grid-view">
                            <i class="bi bi-grid-3x3-gap-fill"></i>
                        </button>
                        <button type="button" class="btn btn-outline-secondary" id="list-view">
                            <i class="bi bi-list-ul"></i>
                        </button>
                    </div>
                </div>
            </div>
            
            <!-- Sonuç bilgisi -->
            <p class="text-muted small mb-4">@Model.Count ürün bulundu</p>
            
            <!-- Ürün grid -->
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4" id="products-grid">
                @foreach (var product in Model)
                {
                    <div class="col product-item" data-category="@product.CategoryId" data-price="@product.Price" data-name="@product.Name.ToLower()">
                        <div class="card h-100 product-card border-0 shadow-sm">
                            <div class="position-relative">
                                @if (!string.IsNullOrEmpty(product.ImageUrl))
                                {
                                    @if (product.ImageUrl.StartsWith("http://") || product.ImageUrl.StartsWith("https://"))
                                    {
                                        <img src="@product.ImageUrl" 
                                             class="card-img-top" 
                                             alt="@product.Name"
                                             style="height: 200px; object-fit: cover;">
                                    }
                                    else
                                    {
                                        <img src="@($"{ViewBag.ApiUrl}{product.ImageUrl}")" 
                                             class="card-img-top" 
                                             alt="@product.Name"
                                             style="height: 200px; object-fit: cover;">
                                    }
                                }
                                else
                                {
                                    <img src="/images/no-image.jpg" 
                                         class="card-img-top" 
                                         alt="No Image"
                                         style="height: 200px; object-fit: cover;">
                                }
                                <div class="product-overlay">
                                    <div class="d-flex justify-content-center">
                                        <a href="@Url.Action("Details", new { id = product.Id })" class="btn btn-light btn-sm me-2">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                        <button class="btn btn-light btn-sm add-to-cart" data-product-id="@product.Id">
                                            <i class="bi bi-cart-plus"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="d-flex justify-content-between mb-2">
                                    <span class="badge bg-light text-dark">@product.CategoryName</span>
                                    @if (product.Stock > 0)
                                    {
                                        <span class="badge bg-success">Stokta</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Tükendi</span>
                                    }
                                </div>
                                
                                <h5 class="card-title">@product.Name</h5>
                                <p class="card-text small text-muted product-description">@product.Description</p>
                                <div class="d-flex justify-content-between align-items-center mt-3">
                                    <span class="fw-bold text-primary fs-5">@product.Price.ToString("C2")</span>
                                    <button class="btn btn-primary add-to-cart" data-product-id="@product.Id">
                                        <i class="bi bi-cart-plus"></i> Sepete Ekle
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            
            <!-- Ürün list -->
            <div id="products-list" class="d-none">
                @foreach (var product in Model)
                {
                    <div class="card mb-3 product-item border-0 shadow-sm" data-category="@product.CategoryId" data-price="@product.Price" data-name="@product.Name.ToLower()">
                        <div class="row g-0">
                            <div class="col-md-3">
                                @if (!string.IsNullOrEmpty(product.ImageUrl))
                                {
                                    @if (product.ImageUrl.StartsWith("http://") || product.ImageUrl.StartsWith("https://"))
                                    {
                                        <img src="@product.ImageUrl" 
                                             class="img-fluid rounded-start h-100" 
                                             alt="@product.Name"
                                             style="object-fit: cover;">
                                    }
                                    else
                                    {
                                        <img src="@($"{ViewBag.ApiUrl}{product.ImageUrl}")" 
                                             class="img-fluid rounded-start h-100" 
                                             alt="@product.Name"
                                             style="object-fit: cover;">
                                    }
                                }
                                else
                                {
                                    <img src="/images/no-image.jpg" 
                                         class="img-fluid rounded-start h-100" 
                                         alt="No Image"
                                         style="object-fit: cover;">
                                }
                            </div>
                            <div class="col-md-9">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between mb-2">
                                        <span class="badge bg-light text-dark">@product.CategoryName</span>
                                        @if (product.Stock > 0)
                                        {
                                            <span class="badge bg-success">Stokta</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-danger">Tükendi</span>
                                        }
                                    </div>
                                    <h5 class="card-title">@product.Name</h5>
                                    <p class="card-text">@product.Description</p>
                                    <div class="d-flex justify-content-between align-items-center mt-3">
                                        <span class="fw-bold text-primary fs-4">@product.Price.ToString("C2")</span>
                                        <div>
                                            <a href="@Url.Action("Details", new { id = product.Id })" class="btn btn-outline-primary me-2">
                                                Detaylar
                                            </a>
                                            <button class="btn btn-primary add-to-cart" data-product-id="@product.Id">
                                                <i class="bi bi-cart-plus"></i> Sepete Ekle
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .product-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            overflow: hidden;
        }
        
        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1) !important;
        }
        
        .product-description {
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
        }
        
        .product-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.3);
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        
        .product-card:hover .product-overlay {
            opacity: 1;
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Görünüm değiştirme
            $('#grid-view').click(function() {
                $(this).addClass('active');
                $('#list-view').removeClass('active');
                $('#products-grid').removeClass('d-none');
                $('#products-list').addClass('d-none');
            });
            
            $('#list-view').click(function() {
                $(this).addClass('active');
                $('#grid-view').removeClass('active');
                $('#products-list').removeClass('d-none');
                $('#products-grid').addClass('d-none');
            });
            
            // Ürün arama
            $('#search-products').on('input', function() {
                const searchTerm = $(this).val().toLowerCase();
                
                $('.product-item').each(function() {
                    const productName = $(this).data('name');
                    if (productName.includes(searchTerm)) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            });
            
            // Kategori filtreleme
            $('.category-filter').change(function() {
                if ($(this).val() === 'all' && $(this).is(':checked')) {
                    $('.category-filter').not('#category-all').prop('checked', false);
                    $('.product-item').show();
                } else {
                    $('#category-all').prop('checked', false);
                    
                    const selectedCategories = $('.category-filter:checked').map(function() {
                        return $(this).val();
                    }).get();
                    
                    if (selectedCategories.length === 0) {
                        $('#category-all').prop('checked', true);
                        $('.product-item').show();
                    } else {
                        $('.product-item').each(function() {
                            const category = $(this).data('category').toString();
                            if (selectedCategories.includes(category)) {
                                $(this).show();
                            } else {
                                $(this).hide();
                            }
                        });
                    }
                }
            });
            
            // Fiyat filtresi
            $('#apply-price-filter').click(function() {
                const minPrice = parseFloat($('#price-min').val()) || 0;
                const maxPrice = parseFloat($('#price-max').val()) || Infinity;
                
                $('.product-item').each(function() {
                    const price = parseFloat($(this).data('price'));
                    if (price >= minPrice && price <= maxPrice) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            });
            
            // Sıralama
            $('#sort-products').change(function() {
                const sortValue = $(this).val();
                let items = $('.product-item').get();
                
                items.sort(function(a, b) {
                    const aVal = $(a).data(sortValue.split('-')[0]);
                    const bVal = $(b).data(sortValue.split('-')[0]);
                    
                    if (sortValue.includes('asc')) {
                        return aVal > bVal ? 1 : -1;
                    } else if (sortValue.includes('desc')) {
                        return aVal < bVal ? 1 : -1;
                    }
                    return 0;
                });
                
                $.each(items, function(i, item) {
                    $('#products-grid').append(item);
                    $('#products-list').append(item);
                });
            });

            // Sepete ekleme
            $('.add-to-cart').on('click', function(e) {
                e.preventDefault();
                
                var productId = $(this).data('product-id');
                
                $.ajax({
                    url: '/Cart/AddToCart',
                    type: 'POST',
                    data: {
                        productId: productId,
                        quantity: 1
                    },
                    success: function(response) {
                        if (response.success) {
                            Swal.fire({
                                title: 'Başarılı!',
                                text: 'Ürün sepete eklendi.',
                                icon: 'success',
                                confirmButtonText: 'Tamam'
                            });
                        } else {
                            if (response.message && response.message.includes('giriş')) {
                                window.location.href = '/Account/Login?returnUrl=' + encodeURIComponent(window.location.pathname);
                            } else {
                                Swal.fire({
                                    title: 'Hata!',
                                    text: response.message || 'Bir hata oluştu.',
                                    icon: 'error',
                                    confirmButtonText: 'Tamam'
                                });
                            }
                        }
                    },
                    error: function(xhr, status, error) {
                        if (xhr.status === 401) {
                            window.location.href = '/Account/Login?returnUrl=' + encodeURIComponent(window.location.pathname);
                        } else {
                            Swal.fire({
                                title: 'Hata!',
                                text: 'Bir hata oluştu: ' + error,
                                icon: 'error',
                                confirmButtonText: 'Tamam'
                            });
                        }
                    }
                });
            });
        });
    </script>
    
    <!-- SweetAlert2 CDN -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
} 